aspect SendTyping{
  eq Send.type(){
        if((getMessage().getSender().getIdent().equals(getModuleName()))
        || (getMessage().getSender().getClass().getName().equals(VarSender.class.getName()) &&
                                                             delegating().getName() != null)){
              if(getMessage().getLabel().getIdent().equals("start_delegation")){
               if(((Atom)getMessage().getPayload(0)).getIdent().equals(getModuleName()) &&
                        getMessage().getPayload(1).type().isSameType(new PidType())){
                            return new RequestForwardDelegation(getRecipient(), getNext().type());
               }
           }
           else{
               if(getMessage().getNumPayload() == 0 ||
                    !(new Atom("end_delegation")).equals(getMessage().getPayload(0))){
                   List<LiteralType> types = new List();
                   for(int i=0;i<getMessage().getNumPayload();i++){
                       types.add((LiteralType)getMessage().getPayload(i).type());
                   }
                   return new SessionSend(getRecipient(),getMessage().getLabel(), types, getNext().type());
               }
           }
        }
       return null;
    }


}