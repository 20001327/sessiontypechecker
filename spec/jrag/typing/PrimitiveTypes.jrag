
aspect PrimitiveTypes {

    eq Pid.type(){
       if(getParent().getClass().getName().equals(Send.class.getName())){
            Send s = (Send) getParent();
            if(s.getMessage().getLabel().getIdent().equals("start_delegation")){
                return new ActorPid(s.getMessage().getSender().getIdent());
            }
       }
       return new PidType();

    }
    eq CharList.type() = new StringType();
    eq Number.type() = new IntType();
    eq Boolean.type() = new BoolType();


    eq Atom.type(){
        if(getParent().getClass().getName().equals(Send.class.getName())){
            Send s = (Send) getParent();
            if(s.getMessage().getLabel().getIdent().equals("start_delegation")){
                return new AtS(s.getMessage().getSender().getIdent());
            }
        }
        return new AtomType();
    }


    eq Variable.type() {
        for (VarDeclaration d : getDeclarations()) {
          if(d.getName().equals(getIdent())){
            return d.getType();
          }
        }
        return null;
    }

    syn lazy Session SenderId.type();
    eq SenderId.type(){  return null;  }

    public String SenderId.getIdent(){
        return null;
    }

    eq VarSender.type() {
        for (VarDeclaration d : getDeclarations()) {
          if(d.getName().equals(getIdent())){
            return d.getType();
          }
        }
        return null;
    }

    eq AtomSender.type() = new AtomType();


}
