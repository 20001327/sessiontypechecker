
aspect PrimitiveTypes {

    eq Pid.type(){
       if(getParent().getClass().getName().equals(Send.class.getName())){
                    Send s = (Send) getParent();
                    if(s.getMessage().getLabel().getIdent().equals("start_delegation")){
                        return new ActorPid(s.getMessage().getSender().getIdent());
                    }
                }
       return new PidType();

    }
    eq CharList.type() = new StringType();
    eq Number.type() = new IntType();
    eq Boolean.type() = new BoolType();


    eq Atom.type(){
        if(getIdent().equals("'End'")){
            return new End();
        }else if(getParent().getClass().getName().equals(Send.class.getName())){
            Send s = (Send) getParent();
            if(s.getMessage().getLabel().getIdent().equals("start_delegation")){
                return new AtS(s.getMessage().getSender().getIdent());
            }
        }
        return new AtomType();
    }


    eq Variable.type() {
        if(typeInfo().getGammaSessionType(getIdent())!=null){
            return typeInfo().getGammaSessionType(getIdent());
        }

        return null;
    }


    syn lazy Session SenderId.type();
    eq SenderId.type(){  return null;  }

    public String SenderId.getIdent(){
        return null;
    }

    eq VarSender.type() {
       return typeInfo().getGammaSessionType(getIdent());
    }

    public boolean VarSender.equals(VarSender other){
        return this.getIdent().equals(other.getIdent());
    }

    eq AtomSender.type() = new AtomType();

    public boolean AtomSender.equals(AtomSender other){
        return this.getIdent().equals(other.getIdent());
    }


}
